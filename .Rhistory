"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
color = factor(cluster),
group = factor(cluster))) +
geom_point(stat = "identity", size = 3, pch = 21) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_color_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster))) +
geom_point(stat = "identity", size = 3, pch = 21) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster))) +
geom_point(stat = "identity", size = 3, pch = c(21,22,23,24)) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = facotr(cluster))) +
geom_point(stat = "identity", size = 3) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_discrete(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
?scale_shape_discrete
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = facotr(cluster))) +
geom_point(stat = "identity", size = 3) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_manual(name = 'State Assignment', solid = TRUE,
values = c(15,16,17,18),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = facotr(cluster))) +
geom_point(stat = "identity", size = 3) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_manual(name = 'State Assignment',
values = c(15,16,17,18),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = factor(cluster))) +
geom_point(stat = "identity", size = 3) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_manual(name = 'State Assignment',
values = c(15,16,17,18),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = factor(cluster))) +
geom_point(stat = "identity", size = 3) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_manual(name = 'State Assignment',
values = c(21,22,23,24),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = factor(cluster))) +
geom_point(stat = "identity", size = 4) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_manual(name = 'State Assignment',
values = c(21,22,23,24),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggplot(cluscounts,
aes(x = year,
y = count / 96,
fill = factor(cluster),
group = factor(cluster),
shape = factor(cluster))) +
geom_point(stat = "identity", size = 3) +
geom_line(stat = "identity", color = "black", linetype = 2) +
ggtitle("State Assignment Frequency") +
theme_bw() +
ylab("Frequency") +
xlab("Year") +
scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +
scale_fill_manual(name = 'State Assignment',
values =c("1" = cols[1],
"2" = cols[2],
"3" = cols[3],
"4" = cols[4]),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus')) +
scale_shape_manual(name = 'State Assignment',
values = c(21,22,23,24),
labels = c('E. glaucus - S. pulchra',
'F. perennis - B. hordeaceous',
'E. caput-medusae - A. triuncialis',
'A. fatua - B. diandrus'))
ggsave("../figures/assignmentfrequency.pdf", width = 7, height = 4)
install.packages("factoextra")
library("factoextra")
?get_clust_tendency
get_clust_tendency(ord.mat, 50, graph = TRUE)
get_clust_tendency(ord.mat, 100, graph = TRUE)
get_clust_tendency(decostand(ord.mat, method = "total"), 100, graph = TRUE)
res = get_clust_tendency(decostand(ord.mat, method = "total"), 100, graph = TRUE)
res$hopkins_stat
res = get_clust_tendency(decostand(ord.mat, method = "total"), 10, graph = TRUE)
res$hopkins_stat
res
res = get_clust_tendency(decostand(ord.mat, method = "total"), 200, graph = TRUE)
res = get_clust_tendency(decostand(ord.mat, method = "total"), 200, graph = TRUE)
res
res = get_clust_tendency(decostand(ord.mat, method = "binary"), 200, graph = TRUE)
res = get_clust_tendency(decostand(ord.mat, method = "pa"), 200, graph = TRUE)
res$hopkins_stat
res
res = get_clust_tendency(decostand(ord.mat, method = "total"), 100, graph = TRUE)
res
iris
iris[,c(1:3)]
get_clust_tendency(iris[,c(1:3)], 100)
get_clust_tendency(scale(iris[,c(1:3)]), 100)
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "pam",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
res
library(tidyverse); library(testthat); library(vegan); library(msm); library(NbClust)
library(ggplot2); library(cluster); library(mclust); library(indicspecies); library(gganimate)
# Cover data (wide format)
cover <- read.csv("../data/comdata_wideformat.csv",
header = TRUE,
stringsAsFactors = FALSE)
group_percents = cover[,8:19]
cover = cover[,-(8:19)]
comp.attr <- cover[,1:15]
comp.cover <- cover[,15:ncol(cover)]
# Treatment labels and group structure
trtlabels <- read.csv("../data/trtlabels.csv",
header = TRUE,
stringsAsFactors = FALSE)
# Species treatments
waps.specs <- read.csv("../data/WAPSspecies.csv",
header = TRUE,
stringsAsFactors = FALSE)
# Climate data
climate <- read.csv("../data/cimis_monthly.csv",
header = TRUE,
stringsAsFactors = FALSE)
selected.trts <-c("annuals", "WAPS", "Natives", "natives+WAPS+annuals", "annuals+natives", "WAPS+annuals", "WAPS+natives")
selected.clips <- c("none")
selected.fert <- c("none")
selected.water <- c("control", "wet", "latewet", "dry")
comp.subset = comp.cover[comp.attr$water %in% selected.water &
comp.attr$sp.trt %in% selected.trts &
comp.attr$clip %in% selected.clips &
comp.attr$fertilization %in% selected.fert,]
print("Total Cover in Dataset:")
specsbycover = sort(round(colSums(comp.subset) / sum(comp.subset),2), decreasing = TRUE)
# specsbycover
print("Plot Occupancy in Dataset:")
specsbyfreq = sort(round(colSums(decostand(comp.subset, method = "pa")) / nrow(comp.subset), 2), decreasing = TRUE)
# specsbyfreq
# What treatments and years should be selected?
selected.trts <-c("annuals", "WAPS", "Natives", "natives+WAPS+annuals", "annuals+natives", "WAPS+annuals", "WAPS+natives")
selected.clips <- c("none")
selected.fert <- c("none")
selected.water <- c("control")
selected.years <- c(2008:2018)
# To include all treatments:
# selected.water <- c("control", "wet", "latewet", "dry")
# Subsetting cover matrix
ord.mat <- comp.cover[comp.attr$water %in% selected.water &
comp.attr$sp.trt %in% selected.trts &
comp.attr$clip %in% selected.clips &
comp.attr$fertilization %in% selected.fert &
comp.attr$year %in% selected.years,]
# Subsetting attribute matrix
ord.att <- comp.attr[comp.attr$water %in% selected.water &
comp.attr$sp.trt %in% selected.trts &
comp.attr$clip %in% selected.clips &
comp.attr$fertilization %in% selected.fert &
comp.attr$year %in% selected.years,]
# Checking that these datasets are the same size
expect_true(nrow(ord.att) == nrow(ord.mat))
# Filtering species
totalcov = sum(ord.mat)
toselect = waps.specs$specname[waps.specs$group %in% c("annual", "natives", "waps")]
ord.mat = ord.mat %>% select(toselect)
cat("Fraction of total cover contained in subset =", sum(ord.mat) / totalcov)
# A number of rows have  no recorded live plants (mostly dry treatments?)
ord.att <- ord.att[rowSums(ord.mat) != 0, ]
ord.mat <- ord.mat[rowSums(ord.mat) != 0, ]
sumtable = left_join(ord.att, bind_cols(comp.attr,group_percents)) %>%
group_by(plot, year, sp.trt) %>%
select(annuals, natives, waps) %>%
mutate(total = sum(annuals, natives, waps)) %>%
group_by(year, sp.trt) %>%
summarise(annprop = mean(annuals / total),
natprop = mean(natives / total),
wapsprop = mean(waps / total),
annsem = sd(annuals / total) / sqrt(n()),
natsem = sd(natives / total) / sqrt(n()),
wapssem = sd(waps / total) / sqrt(n()))
sumtable %>%
ggplot(aes(x = year)) +
geom_line(aes(y = annprop), color = "red") +
geom_line(aes(y = natprop), color = "green") +
geom_line(aes(y = wapsprop), color = "blue") +
geom_errorbar(aes(ymin = annprop - annsem,
ymax = annprop + annsem),
color = "red",
width = .1) +
geom_errorbar(aes(ymin = natprop - natsem,
ymax = natprop + natsem),
color = "green",
width = .1) +
geom_errorbar(aes(ymin = wapsprop - wapssem,
ymax = wapsprop + wapssem),
color = "blue",
width = .1) +
xlab("Year") +
ylab("Proportional Abundance")+
facet_wrap(~sp.trt, nrow = 4)
ggsave("../figures/ProportionalAbundances.pdf", width = 10, height = 6)
# Constructing distance matrix and running NMDS
distmat <- vegdist(decostand(ord.mat, "total"), method = "bray")
WAPS.mds <- metaMDS(distmat, try = 1, trymax = 5, trace = F, autotransform = TRUE)
MDS_xy <- bind_cols(data.frame(ord.att), data.frame(X = WAPS.mds$points[,1], Y = WAPS.mds$points[,2]))
# Plotting figure
ggplot(MDS_xy, aes(X1, Y)) +
geom_point(aes(color = as.factor(year))) +
theme_bw() +
geom_text(data = data.frame(X1 = Inf, Y = -Inf),
hjust = 1, vjust = -1,
label = paste("Stress =", round(WAPS.mds$stress, 2)))
p = ggplot(MDS_xy, aes(X1, Y)) +
geom_point(aes(color = as.factor(sp.trt)), size = 2) +
theme_bw() +
geom_text(data = data.frame(X1 = Inf, Y = -Inf),
hjust = 1, vjust = -1,
label = paste("Stress =", round(WAPS.mds$stress, 2))) +
labs(title = 'Year: {frame_time}') +
transition_time(year) +
ease_aes('linear')
# animate(p, detail = 40, fps = 10)
counter = 1
groupdiss <- c()
groupsil <- c()
for(i in 2:10){
tempclust = pam(distmat, i)
groupdiss[counter] = mean(tempclust$clusinfo[,3])
groupsil[counter] = tempclust$silinfo$avg.width
counter <- counter + 1
}
data.frame(k = c(2:10), dis = groupdiss, sil = groupsil) %>%
ggplot(aes(x = k,
y = groupsil,
fill = groupsil == max(groupsil))) +
geom_point(size = 3, pch = 21)
data.frame(k = c(2:10), dis = groupdiss, sil = groupsil) %>%
ggplot(aes(x = k,
y = groupdiss,
fill = groupsil == max(groupsil))) +
geom_point(size = 3, pch = 21)
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))
NbClust(decostand(ord.mat, method = "total"), min.nc = 1, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "all")[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "all")[1:2]
rowSums(decostand(ord.mat, method = "total"))
sum(rowSums(decostand(ord.mat, method = "total")) == 0)
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
data.frame(bestclust)
data.frame(bestclust[1])
View(data.frame(bestclust[1]))
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda"))
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust
fviz_nbclust(decostand(ord.mat, method = "total"),
method = "kmeans", nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
?NbClust
View(data.frame(bestclust[2]))
bestclust
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "pseudot2"))[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "pseudot2")[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "pseudot2")[1:2]$All.Index
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "pseudot2")[1:2]
NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "pseudot2")[1:2]$All.index
View(NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = "pseudot2")[1:2]$All.index)
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 3, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 5, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 8, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 10, max.nc = 12, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust
View(NbClust(decostand(ord.mat, method = "total"), min.nc = 10, max.nc = 12, method = "kmeans",
index = "pseudot2")[1:2]$All.index)
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 8, max.nc = 12, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust
View(NbClust(decostand(ord.mat, method = "total"), min.nc = 8, max.nc = 12, method = "kmeans",
index = "pseudot2")[1:2]$All.index)
bestclust
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust = NbClust(decostand(ord.mat, method = "total"), min.nc = 2, max.nc = 10, method = "kmeans",
index = c("hartigan", "ch", "beale", "kl", "cindex", "db", "silhouette", "duda", "gap"))[1:2]
bestclust
nrow(ord.mat)
nrow(comp.cover)
nrow(comp.subset)
rnow(comp.attr)
nrow(comp.attr)
sumtable
