size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
edgelabels
edgelabels <- graphdat %>%
select(source, target, weight) %>%
filter(source != target) %>%
bind_cols(data.frame(xpos = c(.75, 0, -.5,
1.25, -.15, 0,
0, .15, -1.25,
.5, 0, -.75),
ypos = c(0, -1.25, .15,
0, -.5, .75,
-.75, .5, 0,
-.15, 1.25, 0)))
corr_fac <- .2
arrow_val <- arrow(length=unit(0.75,"cm"), angle = 15, ends="last", type = "closed")
ggplot() +
theme_void() +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2.5,
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2,
color = "white",
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac,
color = target,
alpha = weight),
curvature = .15,
arrow = arrow_val,
size = 2,
data = graphdat %>% filter(source != target)) +
geom_point(aes(x = xsource,
y = ysource,
size = 1),
pch = 21,
color = "black",
fill = "white",
data = graphdat %>% filter(source == target)) +
geom_point(aes(x = xsource,
y = ysource,
size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
edgelabels <- graphdat %>%
select(source, target, weight) %>%
filter(source != target) %>%
bind_cols(data.frame(xpos = c(.8, 0, -.5,
1.2, -.15, 0,
0, .15, -1.2,
.5, 0, -.8),
ypos = c(0, -1.2, .15,
0, -.5, .8,
-.8, .5, 0,
-.15, 1.2, 0)))
corr_fac <- .2
arrow_val <- arrow(length=unit(0.75,"cm"), angle = 15, ends="last", type = "closed")
ggplot() +
theme_void() +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2.5,
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2,
color = "white",
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac,
color = target,
alpha = weight),
curvature = .15,
arrow = arrow_val,
size = 2,
data = graphdat %>% filter(source != target)) +
geom_point(aes(x = xsource,
y = ysource,
size = 1),
pch = 21,
color = "black",
fill = "white",
data = graphdat %>% filter(source == target)) +
geom_point(aes(x = xsource,
y = ysource,
size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
ggplot() +
theme_void() +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2.5,
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2,
color = "white",
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac,
color = target,
alpha = weight),
curvature = .15,
arrow = arrow_val,
size = 2,
data = graphdat %>% filter(source != target)) +
geom_point(aes(x = xsource,
y = ysource,
size = 1),
pch = 21,
color = "black",
fill = "white",
data = graphdat %>% filter(source == target)) +
geom_point(aes(x = xsource,
y = ysource,
size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target),
font = "bold") +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
ggplot() +
theme_void() +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2.5,
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2,
color = "white",
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac,
color = target,
alpha = weight),
curvature = .15,
arrow = arrow_val,
size = 2,
data = graphdat %>% filter(source != target)) +
geom_point(aes(x = xsource,
y = ysource,
size = 1),
pch = 21,
color = "black",
fill = "white",
data = graphdat %>% filter(source == target)) +
geom_point(aes(x = xsource,
y = ysource,
size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target),
face = "bold") +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
ggplot() +
theme_void() +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2.5,
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2,
color = "white",
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac,
color = target,
alpha = weight),
curvature = .15,
arrow = arrow_val,
size = 2,
data = graphdat %>% filter(source != target)) +
geom_point(aes(x = xsource,
y = ysource,
size = 1),
pch = 21,
color = "black",
fill = "white",
data = graphdat %>% filter(source == target)) +
geom_point(aes(x = xsource,
y = ysource,
size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target),
fontface = "bold") +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
ggplot() +
theme_void() +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2.5,
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac),
curvature = .15,
arrow = arrow_val,
size = 2,
color = "white",
data = graphdat %>% filter(source != target)) +
geom_curve(aes(x = xsource - offsetx * corr_fac,
y = ysource - offsety * corr_fac,
xend = xtarget + offsetx * corr_fac,
yend = ytarget + offsety * corr_fac,
color = target,
alpha = weight),
curvature = .15,
arrow = arrow_val,
size = 2,
data = graphdat %>% filter(source != target)) +
geom_point(aes(x = xsource,
y = ysource,
size = 1),
pch = 21,
color = "black",
fill = "white",
data = graphdat %>% filter(source == target)) +
geom_point(aes(x = xsource,
y = ysource,
size = weight,
fill = source),
pch = 21,
color = "black",
data = graphdat %>% filter(source == target)) +
scale_radius(range = c(20, 40)) +
scale_alpha(range = c(0, 1)) +
coord_cartesian(xlim = c(-2, 2),
ylim = c(-2, 2)) +
guides(fill = FALSE, size = FALSE, color = FALSE, alpha = FALSE) +
geom_text(aes(label = round(weight, 2),
x = xsource,
y = ysource),
data = graphdat %>% filter(source == target)) +
geom_text(aes(label = paste("State", source),
x = xsource,
y = ysource + .5 * sign(ysource)),
data = graphdat %>% filter(source == target),
fontface = "bold") +
geom_text(aes(label = round(weight, 2),
x = xpos,
y = ypos),
data = edgelabels)
shiny::runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
ends <- data.frame(target = character("A", "B", "C", "D"),
xtarget = c(1, 1, -1, -1),
ytarget = c(-1, 1, -1, 1))
ends <- data.frame(target = as.character("A", "B", "C", "D"),
xtarget = c(1, 1, -1, -1),
ytarget = c(-1, 1, -1, 1))
ends
ends <- data.frame(target = c("A", "B", "C", "D"),
xtarget = c(1, 1, -1, -1),
ytarget = c(-1, 1, -1, 1))
ends$target
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
msmfits
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
edge_df
msmfits[1:16]
msmfits[1:16,]
msmfits[1:16,] %>% select(source, target, weight) %>% spread(-source, -targer)
msmfits[1:16,] %>% select(source, target, weight) %>% spread(-source, -target)
msmfits[1:16,] %>% select(source, target, weight) %>% spread()
msmfits[1:16,] %>% select(source, target, weight) %>% spread()
msmfits[1:16,] %>% select(source, target, weight)
msmfits[1:16,] %>% select(source, target, weight) %>% spread()
msmfits[1:16,] %>% select(source, target, weight) %>% dplyr::spread()
msmfits[1:16,] %>% select(source, target, weight) %>% spread(source)
?spread
msmfits[1:16,] %>% select(source, target, weight) %>% spread(source, tager)
msmfits[1:16,] %>% select(source, target, weight) %>% spread(source, target)
msmfits[1:16,] %>% select(source, target, weight) %>% spread(source, weight)
msmfits[1:16,] %>% select(source, target, weight) %>% spread(target, weight)
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
runApp('STM_Dynamic')
install.packages('rsconnect')+
install.packages('rsconnect')
rsconnect::setAccountInfo(name='ebatzer', token='FA864AF0B7FF7007BC79A36A9439234C', secret='nNCHkzB/F501ZjCBcsahTHxFj5db3D8B3dIwVSyw')
getwd()
library(rsconnect)
depl
deployApp()
runApp('STM_Dynamic')
runApp('STM_Dynamic')
deployApp()
getwd()
setwd("STM_Dynamic")
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
